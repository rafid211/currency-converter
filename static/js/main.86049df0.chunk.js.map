{"version":3,"sources":["Converter.js","App.js","index.js"],"names":["Converter","props","type","value","amount","className","onChange","onChangeAmount","selected","onChangeCurrency","currencyOption","map","item","API_URL","App","toAmount","fromAmount","useState","setCurrencyOption","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountFrom","setAmountFrom","exChangeRate","setExchangeRate","toFixed","useEffect","fetch","then","res","json","data","first","Object","keys","rates","base","console","log","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAyBeA,MAvBf,SAAmBC,GAIf,OACI,gCAEI,uBAAOC,KAAK,SAASC,MAAOF,EAAMG,OAAQC,UAAU,QAAQC,SAAUL,EAAMM,iBAE5E,wBAAQJ,MAAOF,EAAMO,SAAUF,SAAUL,EAAMQ,iBAA/C,SAKKR,EAAMS,eAAeC,KAAI,SAACC,GACtB,OAAO,wBAAmBT,MAAOS,EAA1B,SAAiCA,GAApBA,YCbnCC,EAAU,yCA6FDC,MA3Ff,WAAgB,IASVC,EAASC,EATA,EAC8BC,mBAAS,IADvC,mBACNP,EADM,KACSQ,EADT,OAE0BD,mBAAS,IAFnC,mBAENE,EAFM,KAEOC,EAFP,OAGoBH,mBAAS,IAH7B,mBAGNI,EAHM,KAGKC,EAHL,OAIcL,mBAAS,GAJvB,mBAINb,EAJM,KAICmB,EAJD,OAKsBN,oBAAS,GAL/B,mBAKNO,EALM,KAKKC,EALL,OAM0BR,qBAN1B,mBAMNS,EANM,KAMOC,EANP,KAyDb,OA/CGH,GACDR,EAAaZ,EAEbW,GADAA,EAAWX,EAAOsB,GACEE,QAAQ,KAG5Bb,EAAWX,EAEXY,GADAA,EAAaZ,EAAOsB,GACIE,QAAQ,IAGlCC,qBAAU,WACRC,MAAMjB,GACHkB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACH,IAAMC,EAAQC,OAAOC,KAAKH,EAAKI,OAAO,GAEvCpB,EAAkB,CAACgB,EAAKK,MAAP,mBAAeH,OAAOC,KAAKH,EAAKI,UACjDlB,EAAgBc,EAAKK,MACrBjB,EAAca,GACdR,EAAgBO,EAAKI,MAAMH,IAC3BV,GAAc,QAGlB,IACFI,qBAAU,WACS,MAAdV,GAAkC,MAAZE,GAEvBS,MAAM,GAAD,OAAIjB,EAAJ,iBAAoBM,EAApB,oBAA4CE,IAC9CU,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJM,QAAQC,IAAIP,GACZP,EAAgBO,EAAKI,MAAMjB,SAIjC,CAACF,EAAaE,IAYZ,qCACE,iCACE,sDAGF,qBAAKhB,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UAEE,cAAC,EAAD,CACEK,eAAgBA,EAChBF,SAAYW,EACZV,iBAAoB,SAAAG,GAAI,OAAGQ,EAAgBR,EAAK8B,OAAOvC,QACvDC,OAAUY,EACVT,eAvBZ,SAA0BK,GACxBW,EAAUX,EAAK8B,OAAOvC,OACtBsB,GAAc,MAyBN,oBAAIpB,UAAU,MAAd,gBAEA,cAAC,EAAD,CACEK,eAAgBA,EAChBF,SAAYa,EACZZ,iBAAoB,SAAAG,GAAI,OAAGU,EAAcV,EAAK8B,OAAOvC,QACrDC,OAAUW,EACVR,eA9BZ,SAAwBK,GACtBW,EAAUX,EAAK8B,OAAOvC,OACtBsB,GAAc,eCvDlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86049df0.chunk.js","sourcesContent":["import React from 'react'\r\nimport App from './App';\r\nfunction Converter(props) {\r\n   \r\n   \r\n\r\n    return (\r\n        <div>\r\n             \r\n            <input type=\"number\" value={props.amount} className=\"input\" onChange={props.onChangeAmount}/>\r\n           \r\n            <select value={props.selected} onChange={props.onChangeCurrency}>\r\n                {/* <option value=\"none\" selected disabled hidden> \r\n                    Select\r\n                </option>  */}\r\n                \r\n                {props.currencyOption.map((item) => {\r\n                     return <option key={item} value={item}>{item}</option>;\r\n                })}\r\n                \r\n            </select>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Converter;","import './App.css';\nimport Converter from './Converter';\nimport React,{useEffect,useState} from \"react\"\n\nconst API_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const [currencyOption,setCurrencyOption] = useState([]);\n  const [fromCurrency,setFromCurrency] = useState([]);\n  const [toCurrency,setToCurrency]=useState([]);\n  const [amount,setAmount] = useState(1);\n  const [amountFrom,setAmountFrom]  =useState(true);\n  const [exChangeRate,setExchangeRate] = useState();\n\n   //console.log(exChangeRate)\n  var toAmount,fromAmount;\n  if(amountFrom){\n    fromAmount = amount;\n    toAmount = amount*exChangeRate;\n    toAmount = toAmount.toFixed(2);\n  }\n  else{\n    toAmount = amount;\n    fromAmount = amount/exChangeRate;\n    fromAmount = fromAmount.toFixed(2);\n  }\n\n  useEffect(()=>{\n    fetch(API_URL)\n      .then(res=>res.json())\n      .then(data=>{\n         const first = Object.keys(data.rates)[0];\n        //var go = data.base//Object.keys(data.rates)\n        setCurrencyOption([data.base,...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(first)\n        setExchangeRate(data.rates[first])\n        setAmountFrom(true)\n\n      })\n  },[])\n  useEffect(()=>{\n    if(fromCurrency!=null && toCurrency!=null){\n      //const url = '${API_URL}?base=${fromCurrency}&symbol=${toCurrency}'\n      fetch(`${API_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res=>res.json())\n        .then(data=>{\n          console.log(data)\n          setExchangeRate(data.rates[toCurrency])\n        })\n    }\n\n  },[fromCurrency,toCurrency])\n\n  function onChangeFuncFrom(item){\n    setAmount(item.target.value)\n    setAmountFrom(true)\n  }\n  function onChangeFuncTo(item){\n    setAmount(item.target.value)\n    setAmountFrom(false)\n  }\n\n  return (\n      <>\n        <header>\n          <h1>Currency Converter</h1>\n        </header>\n\n        <div className=\"container\">\n          <div className=\"wrepper\">\n           \n            <Converter \n              currencyOption={currencyOption}\n              selected = {fromCurrency}\n              onChangeCurrency = {item=> setFromCurrency(item.target.value)}\n              amount = {fromAmount}\n              onChangeAmount = {onChangeFuncFrom}\n\n            ></Converter>\n\n            <h1 className=\"con\">= </h1>\n\n            <Converter \n              currencyOption={currencyOption}\n              selected = {toCurrency}\n              onChangeCurrency = {item=> setToCurrency(item.target.value)}\n              amount = {toAmount}\n              onChangeAmount = {onChangeFuncTo}\n            ></Converter>\n\n          </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}